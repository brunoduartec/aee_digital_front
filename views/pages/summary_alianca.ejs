<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>

<body class="body">
  <header class="cabeçalho"><%- include('../partials/header'); %></header>

  <div class="container">
    <form>
      <div class="row w-50">
        <div class="w-10 col-sm datepicker">
          <label for="example">Início</label>
          <input placeholder="Select date" type="date" id="start_date" class="form-control">
        </div>
        <div class="w-10 col-sm datepicker">
          <label for="example">Fim</label>
          <input placeholder="Select date" type="date" id="end_date" class="form-control">
        </div>
        <div class="w-10 col-sm ">
          <button>A</button>
          
        </div>

    </form>
      
    </div>
    <div class="row">
      <div class="col-sm">
        <canvas id="myChart" style="width: 50%; max-width: 600px"></canvas>
      </div>
      <div class="col-sm">
        <canvas id="myChart_2" style="width: 50%; max-width: 600px"></canvas>
      </div>
      <div class="col-xs-6">
        <input id="clickMe" type="button" value="Backup" onclick="DownloadResponses();" />
      </div>
    </div>
  </div>

  <div class="overlay"></div>
  <div class="spanner">
    <div class="loader"></div>
    <p>Buscando informações, por favor aguarde</p>
  </div>

  <div class="container-fluid">
    <div id="regionais" class="row">
      
      <%
      const regionaisInfoArray = Object.values(regionaisInfo)
      for(i=0;i<regionaisInfoArray.length;i++){%>


        <%
        const regionalInfo = regionaisInfoArray[i]
        %>

        <%- include('../partials/symmary_alianca_regional',{regionalInfo, summaries}); %>
        
        <%}%>
      
    </div>
  </div>

  <script>

    

    summaries = <%- JSON.stringify(summaries) %>
    regionaisInfo = <%- JSON.stringify(regionaisInfo) %>
    const regionaisInfoArray = Object.values(regionaisInfo)
    $(document).ready(function () {
      console.log("Ready disparado");

      console.log(regionaisInfoArray)
      myFunction();
      // showOverlay();
    });

    var xValues = ["Total", "Iniciaram", "Terminaram"];
    var yValues = [0, 0, 0, 0];
    var barColors = ["yellow", "green"];

    var myChart = new Chart("myChart", {
      type: "bar",
      data: {
        labels: xValues,
        datasets: [{
          backgroundColor: barColors,
          data: yValues,
        }, ],
      },
      options: {
        legend: {
          display: false,
        },
        title: {
          display: true,
          text: "Cadastros",
        },
      },
    });

       
    
    const MONTHS = [
      'January',
      'February',
      'March',
      'April',
      'May',
      'June',
      'July',
      'August',
      'September',
      'October',
      'November',
      'December'
    ];

    function months(config) {
      var cfg = config || {};
      var count = cfg.count || 12;
      var section = cfg.section;
      var values = [];
      var i, value;

      for (i = 0; i < count; ++i) {
        value = MONTHS[Math.ceil(i) % 12];
        values.push(value.substring(0, section));
      }

      return values;
    }
    
    const labels = months({count: 20});

    var myChart_2 = new Chart("myChart_2", {
      type: "line",
      data: {
      labels: labels,
      datasets: [{
        label: 'Registros no tempo',
        data: [65, 59, 80, 81, 56, 55, 40],
        fill: false,
        borderColor: 'rgb(75, 192, 192)',
        tension: 0.1
      }]
    }
      
    });

    function myFunction() {
      var div = document.getElementById("regionais");
      // callGetRegionais(div)
      callGetGeneralInfo(div);
    }

    function addData(chart, label, data) {
      chart.data.labels.push(label);
      chart.data.datasets[0].data.push(data);
      chart.update();
    }

    function setGeneralInfo(total, started, finished) {
      console.log(myChart);

      console.log(myChart.data);
      myChart.data.datasets[0].data[0] = total;
      myChart.data.datasets[0].data[1] = started;
      myChart.data.datasets[0].data[2] = finished;

      myChart.update();
    }

    function callGetGeneralInfo(div) {
      let total = 0;
      let started = 0;
      let finished = 0;

      regionaisInfoArray.forEach((regionalInfo) => {
        total+=regionalInfo.centros.length
        started+=regionalInfo.started
        finished+=regionalInfo.summaries.length
      });

          setGeneralInfo(
            total,started,finished
          );

          hideOverlay();
       
    }
  </script>

  <br />
  <footer><%- include('../partials/footer'); %></footer>
</body>

</html>