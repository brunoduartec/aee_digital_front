<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
  </head>
  <body class="body">
    <header class="cabeÃ§alho"><%- include('../partials/header'); %></header>

    <canvas id="myChart" style="width:100%;max-width:600px"></canvas>
    
    <div  class="container-fluid">
      <div id="regionais" class="row">

      </div>
    </div>

    <script>
      $(document).ready(function(){
        console.log('Ready disparado');
        myFunction()
      });

      var xValues = ["Total","Iniciaram", "Terminaram"];
      var yValues = [100,55, 0,0];
      var barColors = ["yellow", "green"];
      
      var myChart = new Chart("myChart", {
        type: "bar",
        data: {
          labels: xValues,
          datasets: [{
            backgroundColor: barColors,
            data: yValues
          }]
        },
        options: {
          legend: {display: false},
          title: {
            display: true,
            text: "Cadastros"
          }
        }
      });
      
      
      function myFunction() {
        var div = document.getElementById("regionais");
        // callGetRegionais(div)
        callGetGeneralInfo(div)
      }

      function addCard(regionalInfo){

        let divCard = document.createElement("div");
        divCard.setAttribute("class", "card")
        divCard.setAttribute("style", "width: 18rem;")
        
        let divBody = document.createElement("div")
        divBody.setAttribute("class", "card-body");

        divCard.appendChild(divBody);

        let h5 = document.createElement("h5");
        h5.innerText = regionalInfo.NOME_REGIONAL

        divBody.appendChild(h5)

        let p = document.createElement("p");
        p.setAttribute("class", "card-text")
        p.innerText = "Recuperando Info"
        divBody.appendChild(p);

        let a = document.createElement("a");
        a.setAttribute("class", "btn btn-primary")
        a.setAttribute("href", `/summary_coord?ID=${regionalInfo.ID}`)
        a.innerText = "Ver detalhes"
        divBody.appendChild(a);

        return divCard
      }

      function addRegional(div,regionalInfo){
       
        let divCol = document.createElement("div");
        divCol.setAttribute("class", "col-sm")

        let regionalDiv = addCard(regionalInfo)
        divCol.appendChild(regionalDiv)


        div.appendChild(divCol);

        return regionalDiv;
     
      }

      function setRegionalInfo(div,data){
        let children = div.children[0].children[1]

        let total = data.centros.length
        let respondido = data.summary.length;
        children.innerText = `${respondido}/${total}`
      }

      function addData(chart, label, data) {
          chart.data.labels.push(label);
          chart.data.datasets[0].data.push(data)
          
          // chart.data.datasets.forEach((dataset) => {
          //     dataset.data.push(data);
          // });
          chart.update();
      }

      function setGeneralInfo(total, started, finished){

        console.log(myChart)

        console.log(myChart.data)
        myChart.data.datasets[0].data[0] = total
        myChart.data.datasets[0].data[1] = started
        myChart.data.datasets[0].data[2] = finished

        myChart.update()

        console.log(myChart)
        // addData(myChart, "Iniciaram", started)
        // addData(myChart, "Finalizaram", finished)

       
      }

      function callGetGeneralInfo(div){
        var apiUrl = `bff/generalinfo`
        fetch(apiUrl,{
          method: 'GET'
        }).then(response => {
          return response.json();
        }).then(data => {

           const responses = data.responses
           const regionais = data.regionais
           const passes = data.passes
           const centros = data.centros



          for (const regional of regionais) {
            const regionalID = regional.ID
            const centrosOfRegional = centros.filter(m=>{
              return m.REGIONAL.NOME_REGIONAL.includes(regional.NOME_REGIONAL)
            })
            
            const centrosOfRegionalIDs = centrosOfRegional.map(n=>{
              return n.ID 
            })

            const regionalResponses = []
            for (const id of centrosOfRegionalIDs) {
              const response = responses.find(m=>{
                return m.CENTRO_ID.includes(id)
              });

              if(response){
                regionalResponses.push(response)
              }
            }
            let regionalDiv = addRegional(div,  regional);
            setRegionalInfo(regionalDiv,{
              centros:centrosOfRegional,
              summary:regionalResponses
            })

          }

          setGeneralInfo(centros.length,passes.length, responses.length)

            
        }).catch(err => {
          console.log("---ERROR---", err)
          // Do something for an error here
        });
      }

      </script>

    <br />
    <footer><%- include('../partials/footer'); %></footer>
  </body>
</html>
